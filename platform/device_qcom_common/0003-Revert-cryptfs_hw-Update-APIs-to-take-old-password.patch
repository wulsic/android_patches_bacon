From 7af99301d74c20fce72f0924b4349f1b357f9117 Mon Sep 17 00:00:00 2001
From: Hamster Tian <haotia@gmail.com>
Date: Thu, 25 Aug 2016 18:47:47 +0800
Subject: [PATCH 3/4] Revert "cryptfs_hw: Update APIs to take old password"

This reverts commit cac5b037d6ab0f29fbb4b988e1ea7f93532adfab.
---
 cryptfs_hw/cryptfs_hw.c | 26 ++++++++++++++------------
 cryptfs_hw/cryptfs_hw.h |  5 ++---
 2 files changed, 16 insertions(+), 15 deletions(-)

diff --git a/cryptfs_hw/cryptfs_hw.c b/cryptfs_hw/cryptfs_hw.c
index 6102c91..ddab653 100755
--- a/cryptfs_hw/cryptfs_hw.c
+++ b/cryptfs_hw/cryptfs_hw.c
@@ -62,6 +62,7 @@ static unsigned int cpu_id[] = {
 };
 
 static int loaded_library = 0;
+static unsigned char current_passwd[MAX_PASSWORD_LEN];
 static int (*qseecom_create_key)(int, void*);
 static int (*qseecom_update_key)(int, void*, void*);
 static int (*qseecom_wipe_key)(int);
@@ -157,25 +158,25 @@ static int load_qseecom_library()
  * For NON-ICE targets, it would return 0 on success. On ICE based targets,
  * it would return key index in the ICE Key LUT
  */
-static int set_key(const char* currentpasswd, const char* passwd, const char* enc_mode, int operation)
+static int set_key(const char* passwd, const char* enc_mode, int operation)
 {
     int err = -1;
     if (is_hw_disk_encryption(enc_mode) && load_qseecom_library()) {
         unsigned char* tmp_passwd = get_tmp_passwd(passwd);
-        unsigned char* tmp_currentpasswd = get_tmp_passwd(currentpasswd);
         if(tmp_passwd) {
-            if (operation == UPDATE_HW_DISK_ENC_KEY) {
-                if (tmp_currentpasswd)
-                   err = qseecom_update_key(map_usage(QSEECOM_DISK_ENCRYPTION), tmp_currentpasswd, tmp_passwd);
-            } else if (operation == SET_HW_DISK_ENC_KEY) {
+            if (operation == UPDATE_HW_DISK_ENC_KEY)
+                err = qseecom_update_key(map_usage(QSEECOM_DISK_ENCRYPTION), current_passwd, tmp_passwd);
+            else if (operation == SET_HW_DISK_ENC_KEY)
                 err = qseecom_create_key(map_usage(QSEECOM_DISK_ENCRYPTION), tmp_passwd);
-            }
-            if(err < 0) {
+
+            if(err >= 0) {
+                memset(current_passwd, 0, MAX_PASSWORD_LEN);
+                memcpy(current_passwd, tmp_passwd, MAX_PASSWORD_LEN);
+            } else {
                 if(ERR_MAX_PASSWORD_ATTEMPTS == err)
                     wipe_userdata();
             }
             free(tmp_passwd);
-            free(tmp_currentpasswd);
         }
     }
     return err;
@@ -183,12 +184,13 @@ static int set_key(const char* currentpasswd, const char* passwd, const char* en
 
 int set_hw_device_encryption_key(const char* passwd, const char* enc_mode)
 {
-    return set_key(NULL, passwd, enc_mode, SET_HW_DISK_ENC_KEY);
+    return set_key(passwd, enc_mode, SET_HW_DISK_ENC_KEY);
 }
 
-int update_hw_device_encryption_key(const char* oldpw, const char* newpw, const char* enc_mode)
+int update_hw_device_encryption_key(const char* newpw, const char* enc_mode)
 {
-    return set_key(oldpw, newpw, enc_mode, UPDATE_HW_DISK_ENC_KEY);
+
+    return set_key(newpw, enc_mode, UPDATE_HW_DISK_ENC_KEY);
 }
 
 unsigned int is_hw_disk_encryption(const char* encryption_mode)
diff --git a/cryptfs_hw/cryptfs_hw.h b/cryptfs_hw/cryptfs_hw.h
index 026f1ea..7a2ab04 100755
--- a/cryptfs_hw/cryptfs_hw.h
+++ b/cryptfs_hw/cryptfs_hw.h
@@ -34,11 +34,10 @@ extern "C" {
 #endif
 
 unsigned int wipe_hw_device_encryption_key(const char*);
-int set_hw_device_encryption_key(const char*, const char*);
-int update_hw_device_encryption_key(const char*, const char*, const char*);
-int wipe_hw_device_encryption_key(const char*);
 unsigned int is_hw_disk_encryption(const char*);
 unsigned int is_hw_fde_enabled(void);
+int set_hw_device_encryption_key(const char*, const char*);
+int update_hw_device_encryption_key(const char*, const char*);
 int is_ice_enabled(void);
 
 #ifdef __cplusplus
-- 
2.1.4

